version: 0.2

env:
  variables:
    UT_RESOURCE_PREFIX: UT_TOUCHGIFT_DDM
    DB_DRIVER_NAME: mysql
    DB_PORT: 3306
    DB_USER: master
    DB_CONNECT_TIMEOUT_SEC: 600
  parameter-store:
    DB_HOST: /rds/touchgift-cicd/endpoint
    DB_PASSWORD: /rds/touchgift-cicd/user/master/password
    MYSQL_PASSWORD: /rds/touchgift-cicd/user/master/password

phases:
  install:
    runtime-versions:
      golang: 1.20
    commands:
      - apt-get update -y
      - apt-get install -y mysql-server-8.0
      - curl -sSfL https://raw.githubusercontent.com/golangci/golangci-lint/master/install.sh | sh -s -- -b $(go env GOPATH)/bin v1.54.2
      - go get -u github.com/jstemmer/go-junit-report
      - goenv install -l
      - goenv versions
      - go version
      - goenv install 1.20.6 || exit 0
      - goenv global 1.20.6
      - goenv rehash
      - go version
  pre_build:
    commands:
      - WEBHOOK_EVENT=$GITHUB_EVENT_NAME
      - |
        case "$GITHUB_REF" in
          refs/heads/feature/*)
            ENVIRONMENT_SUFFIX=e1
          ;;
          refs/heads/beta/*)
            ENVIRONMENT_SUFFIX=beta1
          ;;
        esac
      - echo "Config ENVIRONMENT_SUFFIX $ENVIRONMENT_SUFFIX"
      - git status
      - cd $CODEBUILD_SRC_DIR/$WORKING_DIR
      - echo Create DynamoDB table...
      - TN_PREFIX=${UT_RESOURCE_PREFIX}_${CODEBUILD_BUILD_NUMBER}_
      - make create-all-table TN_PREFIX=${TN_PREFIX} DYNAMODB_OPTIONS=""
      - echo "Create Database"
      - DB_DATABASE="touchgift_delivery_data_manager_${CODEBUILD_BUILD_NUMBER}"
      - mysql -h "${DB_HOST}" -u "${DB_USER}" -P "${DB_PORT}" -p${DB_PASSWORD} -e "CREATE DATABASE ${DB_DATABASE} TEMPLATE 'template0' ENCODING 'UTF8' LC_COLLATE 'ja_JP.UTF-8' LC_CTYPE 'ja_JP.UTF-8';" -p${MYSQL_PASSWORD}
      - mysql -h "${DB_HOST}" -u "${DB_USER}" -p "${DB_PORT}" -p${DB_PASSWORD} {DB_DATABASE} < rdb/init/1_all.sql
      - echo Logging in to Amazon ECR...
      - IMAGE_TAG=$GITHUB_SHA
  build:
    commands:
      - aws --version
      - echo "Build started on `date` $WEBHOOK_EVENT $GITHUB_REF"
      - echo "GITHUB_EVENT_NAME $GITHUB_EVENT_NAME, GITHUB_SHA $GITHUB_SHA, GITHUB_REF $GITHUB_REF, GITHUB_RUN_ID $GITHUB_RUN_ID"
      - make mod-tidy
      - $(go env GOPATH)/bin/golangci-lint run --tests
      - |
        make test \
          AWS_PROFILE="" \
          DYNAMODB_ENDPOINT="" \
          TABLE_NAME_PREFIX=${TN_PREFIX}
      - echo Building the Docker image...
      - make build-image TAG=$IMAGE_TAG AWS_VAULT_CMD=
      - |
        RUN_DEPLOY="no"
        case "$GITHUB_REF" in
          refs/heads/feature/*)
            RUN_DEPLOY="yes"
          ;;
          refs/heads/beta/*)
            RUN_DEPLOY="yes"
          ;;
        esac
        if [ "$RUN_DEPLOY" = "yes" ]; then
          echo "Pushing image && Deploy image ..."
          make push-image TAG=$IMAGE_TAG AWS_VAULT_CMD= && \
          make run-deploy TAG=$IMAGE_TAG AWS_VAULT_CMD= ENV=staging ENVIRONMENT_SUFFIX=${ENVIRONMENT_SUFFIX}
        fi
    finally:
      - echo finally ...
      - echo Delete DynamoDB table...
      - make delete-all-table TN_PREFIX=${TN_PREFIX} DYNAMODB_OPTIONS=""
      - echo "Drop database"
      - mysql -h "${DB_HOST}" -u "${DB_USER}" -P "${DB_PORT}" -e "DROP DATABASE ${DB_DATABASE}" -p
  post_build:
    commands:
      - echo Build completed on `date`
