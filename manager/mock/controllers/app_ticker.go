// Code generated by MockGen. DO NOT EDIT.
// Source: app_ticker.go

// Package mock_controllers is a generated GoMock package.
package mock_controllers

import (
	reflect "reflect"
	time "time"

	gomock "github.com/golang/mock/gomock"
)

// MockAppTicker is a mock of AppTicker interface.
type MockAppTicker struct {
	ctrl     *gomock.Controller
	recorder *MockAppTickerMockRecorder
}

// MockAppTickerMockRecorder is the mock recorder for MockAppTicker.
type MockAppTickerMockRecorder struct {
	mock *MockAppTicker
}

// NewMockAppTicker creates a new mock instance.
func NewMockAppTicker(ctrl *gomock.Controller) *MockAppTicker {
	mock := &MockAppTicker{ctrl: ctrl}
	mock.recorder = &MockAppTickerMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockAppTicker) EXPECT() *MockAppTickerMockRecorder {
	return m.recorder
}

// New mocks base method.
func (m *MockAppTicker) New(interval, unit time.Duration) *time.Ticker {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "New", interval, unit)
	ret0, _ := ret[0].(*time.Ticker)
	return ret0
}

// New indicates an expected call of New.
func (mr *MockAppTickerMockRecorder) New(interval, unit interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "New", reflect.TypeOf((*MockAppTicker)(nil).New), interval, unit)
}
