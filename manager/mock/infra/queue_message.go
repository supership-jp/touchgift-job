// Code generated by MockGen. DO NOT EDIT.
// Source: queue_message.go

// Package mock_infra is a generated GoMock package.
package mock_infra

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockQueueMessage is a mock of QueueMessage interface.
type MockQueueMessage struct {
	ctrl     *gomock.Controller
	recorder *MockQueueMessageMockRecorder
}

// MockQueueMessageMockRecorder is the mock recorder for MockQueueMessage.
type MockQueueMessageMockRecorder struct {
	mock *MockQueueMessage
}

// NewMockQueueMessage creates a new mock instance.
func NewMockQueueMessage(ctrl *gomock.Controller) *MockQueueMessage {
	mock := &MockQueueMessage{ctrl: ctrl}
	mock.recorder = &MockQueueMessageMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockQueueMessage) EXPECT() *MockQueueMessageMockRecorder {
	return m.recorder
}

// Message mocks base method.
func (m *MockQueueMessage) Message() *string {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Message")
	ret0, _ := ret[0].(*string)
	return ret0
}

// Message indicates an expected call of Message.
func (mr *MockQueueMessageMockRecorder) Message() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Message", reflect.TypeOf((*MockQueueMessage)(nil).Message))
}

// MessageID mocks base method.
func (m *MockQueueMessage) MessageID() *string {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "MessageID")
	ret0, _ := ret[0].(*string)
	return ret0
}

// MessageID indicates an expected call of MessageID.
func (mr *MockQueueMessageMockRecorder) MessageID() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "MessageID", reflect.TypeOf((*MockQueueMessage)(nil).MessageID))
}

// ReceiptHandle mocks base method.
func (m *MockQueueMessage) ReceiptHandle() *string {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ReceiptHandle")
	ret0, _ := ret[0].(*string)
	return ret0
}

// ReceiptHandle indicates an expected call of ReceiptHandle.
func (mr *MockQueueMessageMockRecorder) ReceiptHandle() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ReceiptHandle", reflect.TypeOf((*MockQueueMessage)(nil).ReceiptHandle))
}
